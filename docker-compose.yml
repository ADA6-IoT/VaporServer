# Docker Compose file for Vapor
#
# Install Docker on your system to run and test
# your Vapor app in a production-like environment.
#
# Note: This file is intended for testing and does not
# implement best practices for a production deployment.
#
# Learn more: https://docs.docker.com/compose/reference/
#
# Build images: docker compose build
# Start app: docker compose up app
# Start database: docker compose up db
# Run migrations: docker compose run migrate
# Stop all: docker compose down (add -v to wipe db)
#

volumes:
  db_data:
    driver: local

x-shared_environment: &shared_environment
  LOG_LEVEL: ${LOG_LEVEL:-debug}
  DATABASE_HOST: db
  DATABASE_NAME: hospital_db
  DATABASE_USERNAME: admin
  DATABASE_PASSWORD: 258100

services:
  app:
    image: appleacademychallenge6-app:latest
    build:
      context: .
    environment:
      <<: *shared_environment
    depends_on:
      db:
        condition: service_healthy
    ports:
      - '8080:8080'
    command: ["serve", "--env", "production", "--hostname", "0.0.0.0", "--port", "8080"]
    restart: unless-stopped

  migrate:
    image: appleacademychallenge6-migrate:latest
    build:
      context: .
    environment:
      <<: *shared_environment
    depends_on:
      db:
        condition: service_healthy
    command: ["migrate", "--yes"]
    deploy:
      replicas: 0

  revert:
    image: appleacademychallenge6-revert:latest
    build:
      context: .
    environment:
      <<: *shared_environment
    depends_on:
      db:
        condition: service_healthy
    command: ["migrate", "--revert", "--yes"]
    deploy:
      replicas: 0

  db:
    image: postgres:18-alpine
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 258100
      POSTGRES_DB: hospital_db
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d hospital_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    shm_size: 128mb